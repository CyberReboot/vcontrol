swagger: '2.0'
info:
  title: vcontrol API
  description: This contains the documentation and a functional vcontrol API testing sandbox.
  version: v0.1.1-dev
host: mydomain
schemes:
  - http
basePath: /v1
produces:
  - application/json
paths:
  /:
    get:
      summary: Index
      description: >
        This endpoint is just a quick way to ensure that the vcontrol API is
        up and running properly.
      produces:
        - text/html
      tags:
        - Meta
      responses:
        '200':
          description: Returns `vcontrol`
  /version:
    get:
      summary: Version
      description: >
        This endpoint return the version of `vcontrol` that is currently running this API.
      produces:
        - text/html
      tags:
        - Meta
      responses:
        '200':
          description: Returns a string of the version number
  /add_provider:
    post:
      summary: Add a new provider
      description: >
        This endpoint allows for a new provider such as openstack or vmware to be
        added.  A vent instance runs on a provider.  Note that a provider can
        only be added from `localhost` of the machine running `vcontrol`
        unless the environment variable `VENT_CONTROL_OPEN=true` is set on the
        server.
      tags:
        - Providers
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Add a new provider
          required: true
          schema:
            $ref: '#/definitions/AddProvider'
      responses:
        '200':
          description: String of whether it was able to successfully add a new provider or not.
  '/capacity/{provider}':
    get:
      summary: Provider Capacity
      description: >
        This endpoint allows for getting the current capacity of a particular
        provider.  Currently only supports VMWare and OpenStack.
      tags:
        - Providers
      produces:
        - text/html
      parameters:
        - in: path
          name: provider
          description: Name of provider to get capacity for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns available capacity of the provider
  /heartbeat_providers:
    get:
      summary: Heartbeat providers
      description: >
        This endpoint is just a quick way to ensure that providers are still
        reachable.
      tags:
        - Providers
      responses:
        '200':
          description: Returns a JSON string of providers and their status
  /list_providers:
    get:
      summary: List providers
      description: >
        This endpoint lists all of the providers that have been added.
      tags:
        - Providers
      responses:
        '200':
          description: Returns a JSON string of provider names and types
  '/remove_provider/{provider}':
    get:
      summary: Remove a provider
      description: >
        This endpoint allows for removing a provider such as openstack or
        vmware.  A vent instance runs on a provider, this will not remove
        existing vent instances on the specified provider.  Note that a provider
        can only be removed from `localhost` of the machine running
        `vcontrol` unless the environment variable `VENT_CONTROL_OPEN=true`
        is set on the server.
      tags:
        - Providers
      produces:
        - text/html
      parameters:
        - in: path
          name: provider
          description: Name of provider to remove
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully remove the provider or not.
  /create_instance:
    post:
      summary: Create Instance
      description: >
        This endpoint is for creating a new instance of `vent` on a provider.
      tags:
        - Instances
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Create a new instance of vent
          required: true
          schema:
            $ref: '#/definitions/CreateInstance'
      responses:
        '200':
          description: String of whether it was able to successfully add a new instnace of not.
  '/delete_instance/{instance}':
    get:
      summary: Delete Instance
      description: >
        This endpoint is for delete an existing instance of `vent`.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to remove
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully remove instance or not.
  '/deploy_template/{instance}':
    post:
      summary: Deploy a template to an instance
      description: >
        This endpoint is for uploading a template file to an instance.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to deploy template to
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully deploy template to the instance or not
  '/deregister_instance/{instance}':
    get:
      summary: Deregister an instance
      description: >
        This endpoint is for deregistering an instance from `vcontrol`.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to deregister
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully deregister instance or not
  '/get_info/{instance}':
    get:
      summary: Get info of an instance
      description: >
        This endpoint is for getting info about an instance.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to get info for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of info about the instance
  '/get_stats/{instance}':
    get:
      summary: Get stats of an instance
      description: >
        This endpoint is for getting stats about an instance.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to get stats for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of stats about the instance
  '/get_logs/{instance}':
    get:
      summary: Get logs of an instance
      description: >
        This endpoint is not implemented yet.
        This endpoint is for retrieving logs from an instance.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to get logs from
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of log stats from an instance
  /get_template:
    get:
      summary: Get template from instance
      description: >
        This endpoint is not implemented yet.
      tags:
        - Instances
      responses:
        '200':
          description: Returns 1
  /heartbeat_instances:
    get:
      summary: Heartbeat instances
      description: >
        This endpoint is just a quick way to ensure that providers are still
        reachable.
      tags:
        - Instances
      responses:
        '200':
          description: Returns a JSON string of providers and their status
  /list_instances:
    get:
      summary: List instances
      description: >
        This endpoint lists all of the instances that have been created or
        registered.
      tags:
        - Instances
      responses:
        '200':
          description: Returns a JSON string of instances
  /register_instance:
    post:
      summary: Register instance
      description: >
        This endpoint is for registering an existing `vent` instance into
        `vcontrol`.
      tags:
        - Instances
      responses:
        '200':
          description: String of whether it was able to successfully register the instance or not.
  '/start_instance/{instance}':
    get:
      summary: Start an instance
      description: >
        This endpoint is for starting a stopped instance.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to start
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully start the instance or not.
  '/stop_instance/{instance}':
    get:
      summary: Stop an instance
      description: >
        This endpoint is for stopping a running instance.
      tags:
        - Instances
      parameters:
        - in: path
          name: instance
          description: name of instance to stop
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully stop the instance or not.
  '/command_ssh/{instance}':
    get:
      summary: SSH into an instance
      description: >
        This endpoint is not implemented yet.
        This endpoint is to SSH into an instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to SSH into
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully reach the instance via SSH or not.
  '/command_build/{instance}':
    get:
      summary: Build images on an instance
      description: >
        This endpoint is building Docker images on an instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to build images on
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully build images on the instance or not.
  '/command_generic/{instance}':
    post:
      summary: Run an arbitrary command on an instance
      description: >
        This endpoint is for running an arbitrary command on an instance and
        getting the result back.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to execute the command on
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns string result of the command 
  '/command_messages/{instance}':
    get:
      summary: Get messages of an instance
      description: >
        This endpoint is for getting messages that happen on an instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to get messages for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of messages
  '/command_reboot/{instance}':
    get:
      summary: Reboot an instance
      description: >
        This endpoint is for rebooting a running instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to reboot
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully reboot the instance or not.
  '/command_start/{instance}/{containers}':
    get:
      summary: Start a category of containers on an instance
      description: >
        This endpoint is for starting a specified category of containers on a
        specific instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to start containers on
          required: true
          type: string
          format: string
        - in: path
          name: containers
          description: name of category of containers to start
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully start the containers on the instance or not.
  '/command_services/{instance}':
    get:
      summary: Get services running on an instance
      description: >
        This endpoint is for getting services that are running on an instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to get services for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of services
  '/command_stop/{instance}/{containers}':
    get:
      summary: Stop a category of containers on an instance
      description: >
        This endpoint is for stopping a specified category of containers on a 
        specific instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to stop containers on
          required: true
          type: string
          format: string
        - in: path
          name: containers
          description: name of category of containers to stop
          required: true
          type: string
          format: string
      responses:
        '200':
          description: String of whether it was able to successfully stop the containers on the instance or not.
  '/command_tasks/{instance}':
    get:
      summary: Get tasks running on an instance
      description: >
        This endpoint is for getting tasks that are running on an instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to get tasks for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of tasks
  '/command_tools/{instance}':
    get:
      summary: Get tools on an instance
      description: >
        This endpoint is for getting tools on an instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to get tools for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of tools
  '/command_types/{instance}':
    get:
      summary: Get types on an instance
      description: >
        This endpoint is for getting types on an instance.
      tags:
        - Commands
      parameters:
        - in: path
          name: instance
          description: name of instance to get types for
          required: true
          type: string
          format: string
      responses:
        '200':
          description: Returns JSON string of types
definitions:
  AddProvider:
    type: object
    required:
      - name
      - provider
      - args
      - ram
      - cpu
      - disk
    properties:
      name:
        type: string
        example: esxi1
      provider:
        type: string
        example: openstack
        description: >
          Available providers include `aws`, `azure`, `digitalocean`, `exoscale`,
          `google`, `openstack`, `rackspace`, `softlayer`, and `vmware`
      args:
        type: string
        example: ''
        description: Quoted additional arguments for the specified provider according to `docker-machine`
      ram:
        type: integer
        format: int32
        example: 80
        description: Percentage of RAM usage on host until instances can no longer be created on this provider
      cpu:
        type: integer
        format: int32
        example: 80
        description: Percentage of CPU usage on host until instances can no longer be created on this provider
      disk:
        type: integer
        format: int32
        example: 80
        description: Percentage of Disk usage on host until instances can no longer be created on this provider
  CreateInstance:
    type: object
    required:
      - name
      - provider
    properties:
      name:
        type: string
        example: vent1
      provider:
        type: string
        example: esxi1
        description: >
          Provider to create machine on
      memory:
        type: integer
        format: int32
        example: 4096
        description: >
          Specify how much RAM in MBs to allocate to the new instance, note this
          only works for VMWare and OpenStack providers (default: 1024)
      cpus:
        type: integer
        format: int32
        example: 4
        description: >
          Specify how many CPUs to allocate to the new instance, note this only
          works for VMWare and OpenStack providers (default: 1)
      disk_size:
        type: integer
        format: int32
        example: 20000
        description: >
          Specify how much disk space in MBs to allocate to the new instance,
          note this only works for VMWare and OpenStack providers (default: 20000)
